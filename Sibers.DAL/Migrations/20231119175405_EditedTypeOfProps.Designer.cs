// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sibers.DAL;

#nullable disable

namespace Sibers.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231119175405_EditedTypeOfProps")]
    partial class EditedTypeOfProps
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sibers.DAL.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "admin@gmail.com",
                            FirstName = "AdminFirstName",
                            LastName = "AdminLastName",
                            MiddleName = "AdminMiddleName",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Email = "ProjectManager@gmail.com",
                            FirstName = "ProjectManager",
                            LastName = "ProjectManager",
                            MiddleName = "ProjectManager",
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Email = "FreeProjectManager@gmail.com",
                            FirstName = "FreeProjectManager",
                            LastName = "FreeProjectManager",
                            MiddleName = "FreeProjectManager",
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Email = "Employee@gmail.com",
                            FirstName = "Employee",
                            LastName = "Employee",
                            MiddleName = "Employee",
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Email = "FreeEmployee@gmail.com",
                            FirstName = "FreeEmployee",
                            LastName = "FreeEmployee",
                            MiddleName = "FreeEmployee",
                            UserId = 5L
                        });
                });

            modelBuilder.Entity("Sibers.DAL.Models.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AuthorizerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PerformerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizerId");

                    b.HasIndex("PerformerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AuthorizerId = 2L,
                            Comment = "Job - Project #1",
                            JobStatus = 3,
                            Name = "Job - Sibers Project",
                            PerformerId = 4L,
                            Priority = 5,
                            ProjectId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AuthorizerId = 1L,
                            Comment = "Job - Project #2",
                            JobStatus = 1,
                            Name = "Job - GTEX Project",
                            PerformerId = 4L,
                            Priority = 10,
                            ProjectId = 1L
                        });
                });

            modelBuilder.Entity("Sibers.DAL.Models.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ProjectManagerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManagerId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CustomerName = "SibersCompany",
                            EndDate = new DateTime(2023, 11, 26, 23, 54, 3, 366, DateTimeKind.Local).AddTicks(376),
                            Name = "SibersTestApi",
                            PerformerName = "GTEXCorp",
                            Priority = 1,
                            ProjectManagerId = 2L,
                            StartDate = new DateTime(2023, 11, 19, 23, 54, 3, 366, DateTimeKind.Local).AddTicks(366)
                        },
                        new
                        {
                            Id = 2L,
                            CustomerName = "WithoutEmployees",
                            EndDate = new DateTime(2023, 11, 26, 23, 54, 3, 366, DateTimeKind.Local).AddTicks(395),
                            Name = "FreeProject",
                            PerformerName = "WithoutJobs",
                            Priority = 1,
                            ProjectManagerId = 2L,
                            StartDate = new DateTime(2023, 11, 19, 23, 54, 3, 366, DateTimeKind.Local).AddTicks(395)
                        });
                });

            modelBuilder.Entity("Sibers.DAL.RelationModels.ProjectEmployee", b =>
                {
                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ProjectEmployee", (string)null);

                    b.HasData(
                        new
                        {
                            ProjectId = 1L,
                            EmployeeId = 4L
                        });
                });

            modelBuilder.Entity("Sibers.DAL.Models.Job", b =>
                {
                    b.HasOne("Sibers.DAL.Models.Employee", "Authorizer")
                        .WithMany("AuthorizedJobs")
                        .HasForeignKey("AuthorizerId")
                        .HasPrincipalKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sibers.DAL.Models.Employee", "Performer")
                        .WithMany("PerformingJobs")
                        .HasForeignKey("PerformerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sibers.DAL.Models.Project", "Project")
                        .WithMany("Jobs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authorizer");

                    b.Navigation("Performer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sibers.DAL.Models.Project", b =>
                {
                    b.HasOne("Sibers.DAL.Models.Employee", "ProjectManager")
                        .WithMany("ManagedProjects")
                        .HasForeignKey("ProjectManagerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ProjectManager");
                });

            modelBuilder.Entity("Sibers.DAL.RelationModels.ProjectEmployee", b =>
                {
                    b.HasOne("Sibers.DAL.Models.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sibers.DAL.Models.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sibers.DAL.Models.Employee", b =>
                {
                    b.Navigation("AuthorizedJobs");

                    b.Navigation("ManagedProjects");

                    b.Navigation("PerformingJobs");

                    b.Navigation("ProjectEmployees");
                });

            modelBuilder.Entity("Sibers.DAL.Models.Project", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
